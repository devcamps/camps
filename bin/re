#!/usr/local/bin/perl

use strict;
use warnings;
use Getopt::Long;
use Cwd;
use lib '/home/camp/lib';
use Camp::Master;

*STDOUT->autoflush(1);
*STDERR->autoflush(1);

die "Don't run this as root!\n" if $> == 0;

my @services = qw( httpd app db ic rails );

my %conf;
GetOptions(
    \%conf,
    qw(
        help|h
        stop
        start
        restart
        all
        user        
    ),
    @services,
);

my @camp_numbers;
my $all_user_camps = $conf{user};

@camp_numbers = grep { m/\A\d+\z/ } @ARGV;

my $services_options = join('|', (map { "--$_" } @services));
my $USAGE = <<"EOU";
Camp restart/start/stop script

Usage: re [--help|-h] [--all|$services_options] [--stop|--start|--restart] [--user] [CAMP_NUMBER]

The re command is for convience to restart services for your camp.  It can also
be used to start or stop services.

Default action is --restart.

By default only application servers are acted on.
Add the --all option to also act on the database and webserver.
Other services may be specified with these options: $services_options

Camp number is inferred from a camp's current working directory if available.

If the --user flag is passed, all of the user's camps are affected.

Example: re 44

EOU

die $USAGE  if ($conf{help});

if ($all_user_camps) {
    @camp_numbers =
        map { $_->{camp_number} }
        grep { $_->{username} eq $ENV{USER} }
        Camp::Master::camp_list( all => 1)
    ;
}

unless (@camp_numbers) {
    # if not specified, get current camp # from current working directory
    (getcwd) =~ m{/camp(\d+)} and @camp_numbers = $1;
}

unless (@camp_numbers) {
    die $USAGE;
}


for my $camp_number (@camp_numbers) {
    initialize(
        force => 1,
        camp => $camp_number,
    );

    die "You are not the owner of camp $camp_number!\n"
        if $< != camp_user_obj()->uid()
    ;

    $conf{restart} = 1 unless $conf{stop} or $conf{start};

    my $action;
    for (qw( restart stop start )) {
        $action = $_, last if $conf{$_};
    }

    if ($conf{all}) {
        server_control(
            action  => $action,
            service => 'all',
        );
    }
    elsif (my @services_to_act_on = grep { $conf{$_} } @services) {
        for my $service (@services_to_act_on) {
            server_control( action => $action, service => $service );
        }
    }
    else {
        if (has_rails()) {
            server_control(
                action  => $action,
                service => 'rails',
            );
        }
        if (has_ic()) {
            server_control(
                action  => $action,
                service => 'ic',
            );
        }
    }
}

exit 0;


=pod

=head1 NAME

re - restart/start/stop one or more camp services

=head1 VERSION

3.02

=head1 AUTHOR

Ethan Rowe E<lt>ethan@endpoint.comE<gt> and other contributors

=head1 LICENSE AND COPYRIGHT

Copyright (C) 2006-2014 End Point Corporation, http://www.endpoint.com/

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program. If not, see: http://www.gnu.org/licenses/

=cut
