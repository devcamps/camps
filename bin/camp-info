#!/usr/bin/env perl

use strict;
use warnings;

use lib '/home/camp/lib';

use Camp::Master;
use Cwd;
use Getopt::Long;

Getopt::Long::Configure('no_ignore_case');

*STDOUT->autoflush(1);
*STDERR->autoflush(1);

die "Don't run this as root!\n" if $< == 0;


# Map of Getop options to camp database fields
my %option_to_attribute = (
    'number'  => 'camp_number',
    'name'    => 'username',
    'type'    => 'camp_type',
    'vcs'     => 'vcs_type',
    'comment' => 'comment',
);
my @options_list = keys %option_to_attribute;

my $USAGE=<<EOH;
Usage: camp-info [options] [number]

If the camp number is not specified, it may be inferred from the CAMP
environment variable or the current working directory.

Options:
-A                 Show information for all camps on the system.
--all, -a          Show the camp information for all camps for this user.
--comment          Show the comment for the camp.
--set-comment, -m  Set the comment for the camp.
--number           Show the camp number for the camp.
--name             Show the username for the camp.
--type             Show the camp type for the camp.
--vcs              Show the version control system in use for the camp.
--quiet, -q        Suppress the display of informational headers.
--no-newline, -n   Suppress the display of the newline in the output.
--separator, -s    Separate output with a specified string.
--help, -h         Show this help.
EOH

my %opt;
GetOptions(
    \%opt,
    'help|h',
    'quiet|q',
    'no-newline|n',
    'separator|s=s',
    'all|a',
    'A',
    'set-comment|m=s',
    @options_list,
) or die $USAGE;

if ($opt{help}) {
    print $USAGE;
    exit;
}

# All camps for this user or whole system
if ($opt{all} or $opt{A}) {
    my $opt = {};
    # For this user only
    if ($opt{all}) {
        $opt->{username} = getpwuid($<);
    }
    $opt->{number_only} = 1 if $opt{number};
    print Camp::Master::get_all_camp_info($opt);
    exit;
}

my $display_output_headers = ! $opt{quiet};
my $camp_number = resolve_camp_number(shift);

if (!defined $camp_number) {
    exit 1 if $opt{quiet};
    die "$0: couldn't determine camp; specify in command line or CAMP environment variable\n";
}

# If we set the comment, no output
if ($opt{'set-comment'}) {
    Camp::Master::set_camp_comment($camp_number, $opt{'set-comment'});
    exit;
}

my $info = Camp::Master::get_camp_info( $camp_number );

# TODO: make the order of the attribute flags passed match the order of the output
my @requested_fields;
foreach my $option (@options_list) {
    if ($opt{$option}) {
        push @requested_fields, $option_to_attribute{$option};
    }
}

@requested_fields = values %option_to_attribute unless @requested_fields;

# actual output based on passed params
my $sep = $opt{separator} || qq{\n};

print join $sep,
    map {
        ($display_output_headers ? "$_: " : '')
        . $info->{$_}
    } @requested_fields;
print "\n" unless $opt{'no-newline'};



=pod

=head1 NAME

camp-info - camp information getter/setter

=head1 VERSION

3.06

=head1 AUTHOR

Spencer Christensen, Ethan Rowe, and other contributors

=head1 LICENSE AND COPYRIGHT

Copyright (C) 2006-2020 End Point Corporation, https://www.endpoint.com/

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program. If not, see: http://www.gnu.org/licenses/

=cut
